/*
 * Code.c
 *
 *  Created on: Sep 15, 2023
 *      Author: janaw
 */

#include <avr/io.h>
#include <avr/interrupt.h>

int second = 0;
int minute = 0;
int hour = 0;

void timer1_ctc(){
	TCNT1 = 0;
	OCR1A = 1000;
	TCCR1A  = (1 << FOC1A);
	TCCR1B = (1 << WGM12) | (1 << CS10) | (1 << CS12);
	TIMSK |= (1 << OCIE1A);

}
ISR(TIMER1_COMPA_vect){
	second++;
	if (second == 60){
		minute++;
		second = 0;
		if(minute == 60){
			hour++;
			minute = 0;
		}
	}
}

void INT0_intialization(){
	DDRC &= (1 << PD2);
	PORTD |= (1 << PD2);
	MCUCR |= (1 << ISC01);
	GICR |= (1 << INT0);
}

void INT1_intialization(){
	DDRC &= (1 << PD3);
	MCUCR |= (1 << ISC11) | (1 << ISC10);
	GICR |= (1 << INT1);
}
void INT2_intialization(){
	DDRC &= (1 << PB2);
	PORTB |= (1 << PB2);
	MCUCSR |= (1 << ISC2);
	GICR |= (1 << INT2);
}
//Reset intterupt
ISR(INT0_vect){
	SREG |= (1 << 7);
	second = 0;
	minute = 0;
	hour = 0;
	TCNT1 = 0;
}
//
ISR(INT1_vect){
	TCCR1B &= (~(1 << CS10)) & (~(1 << CS12));
}

ISR(INT2_vect){
	TCCR1B = (1 << WGM12) | (1 << CS10) | (1 << CS12);
}






int main(void){
	while(1){

	}
}
